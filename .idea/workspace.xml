<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8c08c5f0-e73b-43f3-a6d8-bac8c85af69b" name="Changes" comment="Basic test code for creating Embeddings">
      <change afterPath="$PROJECT_DIR$/models/data/dump/data_dump.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/etcd/member/snap/db" beforeDir="false" afterPath="$PROJECT_DIR$/env/docker/volumes/milvus/etcd/member/snap/db" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/etcd/member/wal/0000000000000000-0000000000000000.wal" beforeDir="false" afterPath="$PROJECT_DIR$/env/docker/volumes/milvus/etcd/member/wal/0000000000000000-0000000000000000.wal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data/000005.log" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data/CURRENT" beforeDir="false" afterPath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data/CURRENT" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data/LOG" beforeDir="false" afterPath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data/LOG" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data/MANIFEST-000004" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data/OPTIONS-000007" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data_meta_kv/000005.log" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data_meta_kv/CURRENT" beforeDir="false" afterPath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data_meta_kv/CURRENT" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data_meta_kv/LOG" beforeDir="false" afterPath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data_meta_kv/LOG" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/env/docker/volumes/milvus/rdb_data_meta_kv/MANIFEST-000004" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/models/data/gen/data_generator.py" beforeDir="false" afterPath="$PROJECT_DIR$/models/data/gen/data_generator.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/query/list_info_milvus.py" beforeDir="false" afterPath="$PROJECT_DIR$/query/list_info_milvus.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/storage/storage_coord/storage_coord.py" beforeDir="false" afterPath="$PROJECT_DIR$/storage/storage_coord/storage_coord.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "JoelMartinezSalesforce"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/JoelMartinezSalesforce/mom-gpt.git",
    "accountId": "8d71b8b7-e5c0-43d4-a154-6b0806a5e355"
  }
}]]></component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="DEPENDENCY_CHECKER_PROBLEMS_TAB" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2ihktiDjOUcuduHRPAhd2W64OUM" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python.data_generator.executor&quot;: &quot;Run&quot;,
    &quot;Python.embeddings_SFR.executor&quot;: &quot;Run&quot;,
    &quot;Python.embeddings_SFR_mistral.executor&quot;: &quot;Run&quot;,
    &quot;Python.embeddings_SFR_st.executor&quot;: &quot;Run&quot;,
    &quot;Python.embeddings_SFR_torch.executor&quot;: &quot;Run&quot;,
    &quot;Python.list_info_milvus.executor&quot;: &quot;Run&quot;,
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;Python.test.executor&quot;: &quot;Run&quot;,
    &quot;Python.tst.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;settings.qodana&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/query" />
      <recent name="$PROJECT_DIR$/action/docker" />
    </key>
  </component>
  <component name="RunManager" selected="Python.storage_coord">
    <configuration name="data_generator" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="mom-gpt" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/models/data/gen" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/models/data/gen/data_generator.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="list_info_milvus" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="mom-gpt" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/query" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/query/list_info_milvus.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="mom-gpt" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/py/milvus" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/query/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="storage_coord" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="mom-gpt" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/storage/storage_coord" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/storage/storage_coord/storage_coord.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="test" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="mom-gpt" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/models/embeddings/bare_testing/embedding_generator_testing" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/models/embeddings/bare_testing/embedding_generator_testing/test.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.storage_coord" />
        <item itemvalue="Python.list_info_milvus" />
        <item itemvalue="Python.main" />
        <item itemvalue="Python.data_generator" />
        <item itemvalue="Python.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-PY-241.18034.82" />
        <option value="bundled-python-sdk-975db3bf15a3-2767605e8bc2-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.18034.82" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8c08c5f0-e73b-43f3-a6d8-bac8c85af69b" name="Changes" comment="" />
      <created>1719950413075</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719950413075</updated>
      <workItem from="1719950414456" duration="6859000" />
      <workItem from="1719963237868" duration="14000" />
      <workItem from="1719963348938" duration="9000" />
      <workItem from="1720018924735" duration="31493000" />
      <workItem from="1720295190156" duration="6425000" />
    </task>
    <task id="LOCAL-00001" summary="MockDataGenerator: This class handles way to generate data in the desired format just like the given struct in the outline, this class can create a json file which contains the information but this information can be retrieved in a dict format in order to test vectorizing the data with the SFR 2 Embedding model.">
      <option name="closed" value="true" />
      <created>1720296291598</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1720296291598</updated>
    </task>
    <task id="LOCAL-00002" summary="embedding_const.py contains EmbeddingsConstants which will contain all id's (Strings) of things needed this class can be optional since his full implementation will be further defined">
      <option name="closed" value="true" />
      <created>1720403816603</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1720403816603</updated>
    </task>
    <task id="LOCAL-00003" summary="embedding_controller.py&#10;This class should wrap the functionality of when a controller is being used in a more efficient way meaning this will have a singleton pattern in which only one embedding controller will exists for which it will act when an embedding is being done in an efficent manner avoiding memory leakage">
      <option name="closed" value="true" />
      <created>1720419031783</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1720419031783</updated>
    </task>
    <task id="LOCAL-00004" summary="feat: Implement singleton pattern in EmbeddingModelWrapper&#10;&#10;- Initialize EmbeddingModelWrapper as a singleton class to ensure only one instance of the model and tokenizer is created.&#10;- Integrate automatic device selection for model operations, prioritizing MPS (Metal Performance Shaders) on compatible Apple Silicon devices.&#10;- Add `process_input` and `last_token_pool` methods to handle input processing and to extract normalized embeddings from the last token of the sequences.">
      <option name="closed" value="true" />
      <created>1720455801900</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1720455801900</updated>
    </task>
    <task id="LOCAL-00005" summary="test: Add basic functionality test for Milvus with a simple demo collection&#10;&#10;- Establish a connection to a local Milvus instance with specified user credentials.&#10;- Define a schema for the 'hello_milvus' collection, including fields for primary key, random double values, and float vectors.&#10;- Populate the collection with 3000 entities consisting of primary keys, random doubles, and 8-dimensional vectors.&#10;- Implement and apply an IVF_FLAT index on the 'embeddings' field.&#10;- Perform search operations on the last two vector entities with L2 distance metric and display results filtered by random value constraints.&#10;- List all collections to verify successful integration and functionality of Milvus.">
      <option name="closed" value="true" />
      <created>1720455841165</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1720455841165</updated>
    </task>
    <task id="LOCAL-00006" summary="Config file">
      <option name="closed" value="true" />
      <created>1720455856502</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1720455856502</updated>
    </task>
    <task id="LOCAL-00007" summary="Basic first idea and implementation of what the storage cordinator should be further features to be implemented">
      <option name="closed" value="true" />
      <created>1720455900435</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1720455900435</updated>
    </task>
    <task id="LOCAL-00008" summary="Basic test code for creating Embeddings">
      <option name="closed" value="true" />
      <created>1720455949761</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1720455949761</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="MockDataGenerator: This class handles way to generate data in the desired format just like the given struct in the outline, this class can create a json file which contains the information but this information can be retrieved in a dict format in order to test vectorizing the data with the SFR 2 Embedding model." />
    <MESSAGE value="embedding_const.py contains EmbeddingsConstants which will contain all id's (Strings) of things needed this class can be optional since his full implementation will be further defined" />
    <MESSAGE value="embedding_controller.py&#10;This class should wrap the functionality of when a controller is being used in a more efficient way meaning this will have a singleton pattern in which only one embedding controller will exists for which it will act when an embedding is being done in an efficent manner avoiding memory leakage" />
    <MESSAGE value="feat: Implement singleton pattern in EmbeddingModelWrapper&#10;&#10;- Initialize EmbeddingModelWrapper as a singleton class to ensure only one instance of the model and tokenizer is created.&#10;- Integrate automatic device selection for model operations, prioritizing MPS (Metal Performance Shaders) on compatible Apple Silicon devices.&#10;- Add `process_input` and `last_token_pool` methods to handle input processing and to extract normalized embeddings from the last token of the sequences." />
    <MESSAGE value="test: Add basic functionality test for Milvus with a simple demo collection&#10;&#10;- Establish a connection to a local Milvus instance with specified user credentials.&#10;- Define a schema for the 'hello_milvus' collection, including fields for primary key, random double values, and float vectors.&#10;- Populate the collection with 3000 entities consisting of primary keys, random doubles, and 8-dimensional vectors.&#10;- Implement and apply an IVF_FLAT index on the 'embeddings' field.&#10;- Perform search operations on the last two vector entities with L2 distance metric and display results filtered by random value constraints.&#10;- List all collections to verify successful integration and functionality of Milvus." />
    <MESSAGE value="Config file" />
    <MESSAGE value="Basic first idea and implementation of what the storage cordinator should be further features to be implemented" />
    <MESSAGE value="Milvus Systems Files" />
    <MESSAGE value="Basic test code for creating Embeddings" />
    <option name="LAST_COMMIT_MESSAGE" value="Basic test code for creating Embeddings" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/mom_gpt$main.coverage" NAME="main Coverage Results" MODIFIED="1720029290507" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/py/milvus" />
    <SUITE FILE_PATH="coverage/mom_gpt$tst.coverage" NAME="tst Coverage Results" MODIFIED="1720023506459" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models/embeddings/bare_testing" />
    <SUITE FILE_PATH="coverage/mom_gpt$embeddings_SFR_mistral.coverage" NAME="embeddings_SFR_mistral Coverage Results" MODIFIED="1720026001617" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models/embeddings/bare_testing" />
    <SUITE FILE_PATH="coverage/mom_gpt$test.coverage" NAME="test Coverage Results" MODIFIED="1720031448343" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models/embeddings/bare_testing/embedding_generator_testing" />
    <SUITE FILE_PATH="coverage/mom_gpt$embeddings_SFR_st.coverage" NAME="embeddings_SFR_st Coverage Results" MODIFIED="1719961886470" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models/embeddings/bare" />
    <SUITE FILE_PATH="coverage/mom_gpt$embeddings_SFR.coverage" NAME="embeddings_SFR_torch Coverage Results" MODIFIED="1719962857880" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models/embeddings/bare" />
    <SUITE FILE_PATH="coverage/mom_gpt$list_info_milvus.coverage" NAME="list_info_milvus Coverage Results" MODIFIED="1720461424854" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/query" />
    <SUITE FILE_PATH="coverage/mom_gpt$data_generator.coverage" NAME="data_generator Coverage Results" MODIFIED="1720212587012" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models/data/gen" />
  </component>
</project>